(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{564:function(t,s,e){t.exports=e.p+"assets/img/yarn和npm的比较.948bc0cd.png"},572:function(t,s,e){"use strict";e.r(s);var a=e(13),n=Object(a.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h3",{attrs:{id:"新建本地分支"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#新建本地分支"}},[t._v("#")]),t._v(" 新建本地分支")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("新建一个和远程分支同名的本地分支")]),t._v(" "),a("p",[a("code",[t._v("git checkout --track origin/branch_name")])])]),t._v(" "),a("li",[a("p",[t._v("新建一个与远程分支不同名的本地分支")]),t._v(" "),a("p",[a("code",[t._v("git checkout -b new_branch_name origin/branch_name")])])])]),t._v(" "),a("h3",{attrs:{id:"拉取代码"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#拉取代码"}},[t._v("#")]),t._v(" 拉取代码")]),t._v(" "),a("ul",[a("li",[a("p",[a("code",[t._v("git pull")])]),t._v(" "),a("p",[t._v("等同于"),a("code",[t._v("git fetch")]),t._v(" && "),a("code",[t._v("git merge")])])]),t._v(" "),a("li",[a("p",[a("code",[t._v("git fetch")])]),t._v(" "),a("p",[t._v("只是拉取远程所有分支的更改，而不合并，合并推荐使用"),a("code",[t._v("git rebase -i origin/xxxx")])])])]),t._v(" "),a("h3",{attrs:{id:"分支相关"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#分支相关"}},[t._v("#")]),t._v(" 分支相关")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("新建本地分支，但不切换")]),t._v(" "),a("p",[a("code",[t._v("git branch xxx")])])]),t._v(" "),a("li",[a("p",[t._v("查看本地分支")]),t._v(" "),a("p",[a("code",[t._v("git branch")])])]),t._v(" "),a("li",[a("p",[t._v("查看远程分支")]),t._v(" "),a("p",[a("code",[t._v("git branch -r")])])]),t._v(" "),a("li",[a("p",[t._v("查看本地和远程分支")]),t._v(" "),a("p",[a("code",[t._v("git branch -a")])])]),t._v(" "),a("li",[a("p",[t._v("查看本地分支对应远程仓库的"),a("code",[t._v("commit")])]),t._v(" "),a("p",[a("code",[t._v("git branch -vv")])])]),t._v(" "),a("li",[a("p",[t._v("查看本地分支与远程分支的对应关系")]),t._v(" "),a("p",[a("code",[t._v("git remote show origin")])])])]),t._v(" "),a("h3",{attrs:{id:"添加和提交暂存"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#添加和提交暂存"}},[t._v("#")]),t._v(" 添加和提交暂存")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("添加当前所有修改文件到暂存区")]),t._v(" "),a("p",[a("code",[t._v("git add")])])]),t._v(" "),a("li",[a("p",[t._v("提交暂存")]),t._v(" "),a("p",[a("code",[t._v("git commit -m 'xxx message'")])])]),t._v(" "),a("li",[a("p",[t._v("如果感觉提交的信息不好，可以修改")]),t._v(" "),a("p",[a("code",[t._v("git commit --amend")])])])]),t._v(" "),a("h3",{attrs:{id:"暂存"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#暂存"}},[t._v("#")]),t._v(" 暂存")]),t._v(" "),a("ul",[a("li",[a("p",[a("code",[t._v("git stash save '名称'")]),t._v("（推荐）")]),t._v(" "),a("p",[t._v("保存时给个标识，方便查找和恢复")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("git stash")]),t._v("  （不推荐）")]),t._v(" "),a("p",[t._v("保存")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("git stash list")])]),t._v(" "),a("p",[t._v("查看所有保存的列表记录")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("git stash pop")])]),t._v(" "),a("p",[t._v("恢复最近保存的，"),a("strong",[t._v("不推荐使用")])])]),t._v(" "),a("li",[a("p",[a("code",[t._v("git stash pop stash@{num}")])]),t._v(" "),a("p",[t._v("恢复，"),a("code",[t._v("num")]),t._v("是可选项，通过"),a("code",[t._v("git stash list")]),t._v("查看具体数字，"),a("strong",[t._v("只能恢复一次")])])]),t._v(" "),a("li",[a("p",[a("code",[t._v("git stash apply stash@{num}")]),t._v("  （推荐）")]),t._v(" "),a("p",[t._v("恢复，"),a("code",[t._v("num")]),t._v("是可选项，通过"),a("code",[t._v("git stash list")]),t._v("查看具体数字，"),a("strong",[t._v("可以恢复多次")])])]),t._v(" "),a("li",[a("p",[a("code",[t._v("git stash drop stash@{num}")])]),t._v(" "),a("p",[t._v("删除某个保存，"),a("code",[t._v("num")]),t._v("是可选项，通过"),a("code",[t._v("git stash list")]),t._v("查看具体数字")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("git stash clear")])]),t._v(" "),a("p",[t._v("删除所有保存")])])]),t._v(" "),a("h3",{attrs:{id:"git-stash在各个分支切换"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git-stash在各个分支切换"}},[t._v("#")]),t._v(" "),a("code",[t._v("git stash")]),t._v("在各个分支切换")]),t._v(" "),a("blockquote",[a("p",[t._v("结论：git stash的数据模型是基于栈的，并且存储栈是基于整个工作空间的，而不是某个分支的")])]),t._v(" "),a("p",[a("a",{attrs:{href:"https://blog.csdn.net/LS7011846/article/details/90576413",target:"_blank",rel:"noopener noreferrer"}},[t._v("git stash在各个分支触发"),a("OutboundLink")],1)]),t._v(" "),a("h3",{attrs:{id:"git-remote"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git-remote"}},[t._v("#")]),t._v(" "),a("code",[t._v("git remote")])]),t._v(" "),a("ul",[a("li",[a("p",[a("code",[t._v("git remote -v")]),a("br"),t._v("\n查看现有远端git地址")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("git remote set-url origin 远端地址")])]),t._v(" "),a("p",[t._v("将现有的远端地址替换为新的地址，如："),a("code",[t._v("git remote set-url origin https://xx.xx.xx.xxx/xxx/xx.git")])])])]),t._v(" "),a("h3",{attrs:{id:"回滚git-revert和git-reset"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#回滚git-revert和git-reset"}},[t._v("#")]),t._v(" 回滚"),a("code",[t._v("git revert")]),t._v("和"),a("code",[t._v("git reset")])]),t._v(" "),a("ul",[a("li",[a("p",[a("code",[t._v("git reset")])]),t._v(" "),a("blockquote",[a("p",[t._v("它的原理是通过改变HEAD的指向，改变到之前存在的某个版本，缺点：这个指向版本的后面版本都会被干掉")])]),t._v(" "),a("ol",[a("li",[a("p",[t._v("未使用"),a("code",[t._v("git add .")]),t._v("缓存的代码(工作区workspace)")]),t._v(" "),a("ul",[a("li",[a("p",[a("code",[t._v("git checkout --文件名")])]),t._v(" "),a("p",[t._v("如："),a("code",[t._v("git checkout --read.md")])])]),t._v(" "),a("li",[a("p",[a("code",[t._v("git checkout .")])]),t._v(" "),a("p",[t._v("放弃所有文件的修改")])])])]),t._v(" "),a("li",[a("p",[t._v("已经"),a("code",[t._v("git add .")]),t._v("缓存的代码(暂存区Index)")]),t._v(" "),a("ul",[a("li",[a("p",[a("code",[t._v("git reset 文件名")])]),t._v(" "),a("p",[t._v("如："),a("code",[t._v("git reset readme.md")]),t._v("放弃指定文件的缓存")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("git reset .")])]),t._v(" "),a("p",[t._v("放弃本地所有缓存")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("git reset HEAD .")])]),t._v(" "),a("p",[t._v("放弃所有缓存")])])])]),t._v(" "),a("li",[a("p",[t._v("已经"),a("code",[t._v("commit")]),t._v("提交的代码(本地仓库)")]),t._v(" "),a("ul",[a("li",[a("p",[a("code",[t._v("git reset --hard HEAD^")])]),t._v(" "),a("p",[t._v("回到上一次commit的状态")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("git reset --hard 'commitId'")])]),t._v(" "),a("p",[t._v("回退到指定版本，"),a("code",[t._v("commitId")]),t._v("通过"),a("code",[t._v("git log")]),t._v("查看")])])])])])]),t._v(" "),a("li",[a("p",[a("code",[t._v("git revert")])]),t._v(" "),a("blockquote",[a("p",[a("strong",[t._v("反做")]),t._v("某一个版本，如commit了三个版本(版本1,2,3)，如果想撤销版本2的提交，又不影响版本3的提交，就可以反做版本2，生成新的版本4，版4里面包含了版3的内容，但是撤销了版2的东西")])]),t._v(" "),a("p",[t._v("场景：你的项目最近有2个版本要上线，这两个版本还伴随着之前遗留的 bug 的修复，一开始的时候，你将 bug 修复在了第一个版本的 release 分支上，突然在发版前一天，测试那边反馈，需要把第一个版本修复 bug 的内容改在第二个版本上，这个时候，第一个版本的集成分支提交应该包括了第一个版本的功能内容，遗留 bug 修复的提交和其他同事提交的内容，想要通过 reset 的方式粗暴摘除之前的关于 bug 修复的 commit 肯定是不行的，同时，这种做法比较危险，此时，我们既不想破坏之前的提交记录，又想撤回我们遗留 bug 的 commit 记录应该怎么做呢？git revert 就派上了用场。（所以针对每次提交的"),a("code",[t._v("commit")]),t._v("最好是解决一个问题或者一个功能需求，这样才能更好的回退）")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" revert "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("commit-id"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("     针对普通 commit\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" revert "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("commit-id"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" -m  针对 merge 的 commit\n")])])])])]),t._v(" "),a("h3",{attrs:{id:"合并git-merge-git-rebase-git-cherry-pick"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#合并git-merge-git-rebase-git-cherry-pick"}},[t._v("#")]),t._v(" 合并"),a("code",[t._v("git merge/git rebase/git cherry-pick")])]),t._v(" "),a("ul",[a("li",[a("p",[a("code",[t._v("git merge")])]),t._v(" "),a("ul",[a("li",[a("p",[t._v("开发分支（dev）上的代码达到上线的标准后，要合并到 master 分支")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" checkout dev\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" pull\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" checkout master\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" merge dev\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" push -u origin master\n")])])])]),t._v(" "),a("li",[a("p",[t._v("当master代码改动了，需要更新开发分支（dev）上的代码")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" checkout master \n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" pull \n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" checkout dev\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" merge master \n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" push -u origin dev\n")])])])])])]),t._v(" "),a("li",[a("p",[a("code",[t._v("git rebase")]),t._v("(合并提交记录和合并分支)")]),t._v(" "),a("blockquote",[a("p",[t._v("特别注意，只能在自己使用的 feature 分支上进行 rebase 操作，不允许在集成分支上进行 rebase，因为这种操作会修改集成分支的历史记录。"),a("strong",[t._v("最好合并commit在push之前")])])]),t._v(" "),a("ul",[a("li",[a("p",[t._v("合并提交记录得到一个干净的提交历史（项目中用到了）")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("查看"),a("code",[t._v("commit")]),t._v("历史")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" log --oneline\n")])])])]),t._v(" "),a("li",[a("p",[t._v("查看是要合并最近提交的几条"),a("code",[t._v("commit")])]),t._v(" "),a("blockquote",[a("p",[t._v("找到你要保留的那条 commit 的"),a("strong",[t._v("上一条 commit")]),t._v("，复制这条 commit 的 id。记住一定要是目标提交的上一次提交记录，这样可以保证你要保留的那一条 commit 出现在 pick 清单的顶部，这非常重要。这里就需要根据你的实际情况来看了，3代表要合并最近的3条"),a("code",[t._v("commit")])])]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" rebase -i HEAD~3\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 或者")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" rebase -i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("base-commit"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),a("p",[t._v("2.1 修改要保留的"),a("code",[t._v("commit")]),t._v("和要合并的"),a("code",[t._v("commit")])]),t._v(" "),a("blockquote",[a("p",[t._v("会弹出一个vim的交互式界面，"),a("code",[t._v("pick")]),t._v("代表你要保留的那个"),a("code",[t._v("commit")]),t._v("，而"),a("code",[t._v("squash")]),t._v("代表要合并这些个"),a("code",[t._v("commit")]),t._v("，如果想合并多个，那么就把它们前面的"),a("code",[t._v("pick")]),t._v("都改为**"),a("code",[t._v("s")]),t._v("**")])]),t._v(" "),a("p",[t._v("注意：这里可能会出现一些合并有误等情况，需要根据实际情况看报错提示，一般会有下面这些：")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 回到最初")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" rebase --abort\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 编辑未完成的")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" rebase --edit-todo\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 如果已经存在一个rebase-merge文件，可能需要删除")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("rm")]),t._v(" -fr "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('".git/rebase-merge"')]),t._v("（双引号）\n")])])]),a("p",[t._v("2.2 此时会再次弹出一个弹窗，里面可以修改"),a("code",[t._v("commit")]),t._v("提交的文字描述，不需要的就可以注释掉，最后只留一个")]),t._v(" "),a("p",[t._v("2.3 如果有冲突，解决了冲突，需要")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(".")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" rebase --continue\n")])])])]),t._v(" "),a("li",[a("p",[t._v("最后push到远程仓库（这里需要使用强制提交）")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" push origin xxx -f\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 或者")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" push -f\n")])])])])])]),t._v(" "),a("li",[a("p",[t._v("合并分支")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" rebase -i origin/xxxx\n")])])])])])]),t._v(" "),a("li",[a("p",[a("code",[t._v("git cherry-pick")])]),t._v(" "),a("blockquote",[a("p",[t._v("当我们需要在本地合入其他分支的提交时，如果我们不想对整个分支进行合并，而是只想将某一次提交合入到本地当前分支上，那么就要使用 "),a("code",[t._v("git cherry-pick")]),t._v(" 了")])]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" cherry-pick "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("commit-hash"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 如果出现冲突，解决冲突后进行")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" \n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" cherry-pick --continue\n")])])])])]),t._v(" "),a("h3",{attrs:{id:"nrm切换npm源"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#nrm切换npm源"}},[t._v("#")]),t._v(" "),a("code",[t._v("nrm")]),t._v("切换"),a("code",[t._v("npm")]),t._v("源")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#1、全局安装 nrm")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" -g nrm\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#2、增加源")]),t._v("\nnrm "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" bdr http://10.8.207.132:4873/\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#3、切换源")]),t._v("\nnrm use bdr\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#4、查看源")]),t._v("\nnrm "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("ls")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#5、删除源")]),t._v("\nnrm del "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("源名字"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#6、测试速度")]),t._v("\nnrm "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("test")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#7、可能需要先删除node_modules下的文件再进行")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" cache clean -f\n")])])]),a("h3",{attrs:{id:"nvm安装控制node不同版本"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#nvm安装控制node不同版本"}},[t._v("#")]),t._v(" "),a("code",[t._v("nvm")]),t._v("安装控制"),a("code",[t._v("node")]),t._v("不同版本")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 全局安装nvm")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("curl")]),t._v(" -o- https://raw.githubusercontent.com/creationix/nvm/v0.33.8/install.sh "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("bash")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 安装不同版本的node")]),t._v("\nnvm "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" v14.xxx\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 切换使用某个版本")]),t._v("\nnvm use "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("version"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 列出所有安装的版本")]),t._v("\nnvm "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("ls")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 显示当前的版本")]),t._v("\nnvm current\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 卸载已安装的版本")]),t._v("\nnvm uninstall "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("version"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),a("h3",{attrs:{id:"yarn的安装和使用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#yarn的安装和使用"}},[t._v("#")]),t._v(" "),a("code",[t._v("yarn")]),t._v("的安装和使用")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#1、安装yarn")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" -g "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("yarn")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#2、查看版本号")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("yarn")]),t._v(" -v\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#3、初始化项目package.json")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("yarn")]),t._v(" init\n")])])]),a("h3",{attrs:{id:"npm-和yarn的比较"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#npm-和yarn的比较"}},[t._v("#")]),t._v(" npm 和yarn的比较")]),t._v(" "),a("p",[a("img",{attrs:{src:e(564),alt:"yarn和npm的比较"}})]),t._v(" "),a("h3",{attrs:{id:"tree命令的使用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#tree命令的使用"}},[t._v("#")]),t._v(" "),a("code",[t._v("tree")]),t._v("命令的使用")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#1、展示所有文件夹")]),t._v("\ntree\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#2、展示文件目录和文件")]),t._v("\ntree /f\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#3、只显示文件目录")]),t._v("\ntree /a\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#4、结果想要保存下来，使用")]),t._v("\ntree /a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" tree.txt\n\n")])])]),a("h3",{attrs:{id:"package-json中依赖包前面的-是什么意思"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#package-json中依赖包前面的-是什么意思"}},[t._v("#")]),t._v(" package.json中依赖包前面的"),a("code",[t._v("^")]),t._v("是什么意思")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("^: 只会执行不更改最左边非零数字的更新。 如果写入的是 ^0.13.0，则当运行 npm update 时，可以更新到 0.13.1、0.13.2 等，但不能更新到 0.14.0 或更高版本。 如果写入的是 ^1.13.0，则当运行 npm update 时，可以更新到 1.13.1、1.14.0 等，但不能更新到 2.0.0 或更高版本。\n\n~: 如果写入的是 〜0.13.0，则当运行 npm update 时，会更新到补丁版本：即 0.13.1 可以，但 0.14.0 不可以。\n\n>: 接受高于指定版本的任何版本。\n\n>=: 接受等于或高于指定版本的任何版本。\n\n<=: 接受等于或低于指定版本的任何版本。\n\n<: 接受低于指定版本的任何版本。\n\n=: 接受确切的版本。\n\n-: 接受一定范围的版本。例如：2.1.0 - 2.6.2。\n\n||: 组合集合。例如 < 2.1 || > 2.6。\n")])])]),a("h3",{attrs:{id:"permission-denied-publickey-缺失问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#permission-denied-publickey-缺失问题"}},[t._v("#")]),t._v(" Permission Denied (publickey)缺失问题")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://blog.csdn.net/sxg0205/article/details/81412921",target:"_blank",rel:"noopener noreferrer"}},[t._v("git clone 解决Permission Denied (publickey)问题"),a("OutboundLink")],1)]),t._v(" "),a("h3",{attrs:{id:"yarn-错误there-appears-to-be-trouble-with-your-network-connection-retrying"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#yarn-错误there-appears-to-be-trouble-with-your-network-connection-retrying"}},[t._v("#")]),t._v(" "),a("code",[t._v("yarn 错误There appears to be trouble with your network connection. Retrying")])]),t._v(" "),a("p",[t._v("解决方式：")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("yarn")]),t._v(" config "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("set")]),t._v(" registry https://registry.npm.taobao.org\n")])])]),a("h3",{attrs:{id:"配置cnpm镜像"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#配置cnpm镜像"}},[t._v("#")]),t._v(" 配置cnpm镜像")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#安装cnpm镜像")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" -g cnpm --registry"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("https://registry.npm.taobao.org\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#使用代理registry")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" config "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("set")]),t._v(" registry https://registry.npm.taobao.org\n")])])]),a("h3",{attrs:{id:"参考资料"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#参考资料"}},[t._v("#")]),t._v(" 参考资料：")]),t._v(" "),a("blockquote",[a("p",[t._v("1、"),a("a",{attrs:{href:"https://www.jianshu.com/p/0e9d07ec76f9",target:"_blank",rel:"noopener noreferrer"}},[t._v("GIT版本管理看这一篇就够了"),a("OutboundLink")],1),t._v("\n2、[Git进阶之合并多次commit](")])])])}),[],!1,null,null,null);s.default=n.exports}}]);